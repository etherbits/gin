import { auth } from "@/lib/lucia";
import * as context from "next/headers";
import { NextResponse, type NextRequest } from "next/server";
import { LoginData, loginSchema } from "@/validation-schemas/auth";
import { getParsedFormData } from "@/utils/parser";
import { ApiError, getResult } from "@/utils/errorHandling";
import { respondWithSuccess } from "@/utils/api";

export async function POST(request: NextRequest) {
  const loginData = await getParsedFormData(request, loginSchema);

  await getResult(
    () => authenticateUser(loginData),
    new ApiError(400, "Something went wrong with authenticating your account"),
  );

  return respondWithSuccess();
}

async function authenticateUser(loginData: LoginData) {
  const { email, password } = loginData;

  return await getResult(async () => {
    const key = await auth.useKey("email", email.toLowerCase(), password);
    const session = await auth.createSession({
      userId: key.userId,
      attributes: {},
    });

    const authRequest = auth.handleRequest("POST", context);
    authRequest.setSession(session);
  });
}
